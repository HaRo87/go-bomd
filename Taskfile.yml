version: "3"

vars:
  APP: bomd{{exeExt}}

tasks:

  install-tools:
    desc: installing required tools
    vars:
      TOOLS:
        sh: cat tools.txt
    cmds:
      - |
        {{range $i, $tool := .TOOLS | splitLines -}}
        go install {{$tool}}
        {{end}}
  
  download-dependencies:
    desc: downloading all required Go dependencies
    cmds:
      - go mod download

  setup:
    desc: installing all required project dependencies
    cmds:
      - task: install-tools
      - task: download-dependencies

  check-setup:
    desc: check system dependencies
    cmds:
      - which go || (echo "FAILURE, install Go please" >&2; exit 1)
      - which golangci-lint || (echo "FAILURE, install golangci-lint please" >&2; exit 1)

  clean:
    desc: Clean the project
    cmds:
      - rm -rf ./build

  test:
    desc: Test the project
    cmds:
      - go test -cover ./...

  format:
    desc: Format the project
    cmds:
      - go fmt $(go list ./... | grep -v /vendor/)
      - go vet $(go list ./... | grep -v /vendor/)
      - find . -type f -name "*.go" -execdir goimports -l -w {} +

  lint:
    desc: Lint the code
    cmds:
      - golangci-lint run ./...

  security:
    desc: Run gosec for project
    cmds:
      - gosec -quiet ./...

  build:
    deps: [clean]
    desc: Build the project
    cmds:
      - mkdir ./build
      - CGO_ENABLED=0 GOARCH=amd64 go build -ldflags="-w -s" -o ./build/{{.APP}} .
